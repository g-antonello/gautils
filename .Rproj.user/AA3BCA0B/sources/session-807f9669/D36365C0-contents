---
title: "Smoking Paper - Betsy Extras"
author: "Giacomo Antonello"
date: "`r paste('Creation:', '2022-10-24', '\nlast modified:', Sys.Date())`"
output:
  rmdformats::readthedown:
    self_contained: true
    code_folding: hide
    toc_depth: 2
    toc_float: true
    number_sections: true
    thumbnails: false
    lightbox: true
    gallery: false
    use_bookdown: true
    highlight: haddock


---

<style type="text/css">
.main-container {
  max-width: 100% !important;
  margin-left: auto;
  margin-right: auto;
}
</style>
  
![Eurac Reserach, Bolzano, Italy](C:\Users\gantonello\OneDrive - Scientific Network South Tyrol\Immagini\chris-logo-illi_720x540.png){width=50%}
![University of Michigan, School of Public Health, Michigan, United States](C:\Users\gantonello\OneDrive - Scientific Network South Tyrol\Immagini\fNAXKPX9_400x400.jpg){width=12%}

![Computational Genomics Group, CIBIO, University of Trento, Italy](C:\Users\gantonello\OneDrive - Scientific Network South Tyrol\Immagini\Segata Lab logo.png){width=15%}

The idea of this script is to make auxiliary figures to the functional analysis of the smoking paper.
We had several discussions and came up with the idea that something may be wrong with the figures, especially figure 2, the functional heatmap. 

I rather think it is an approximation, and no matter what you do, the problem will still be there, only with different features. 

```{r, echo=FALSE}
knitr::opts_chunk$set(
  cache = FALSE,
  concordance = TRUE,
  prompt = TRUE, # fig.width=5, fig.height=5,
  out.width = "100%",
  echo = TRUE,
  warning = FALSE,
  message = FALSE,
  error = TRUE,
  tidy = FALSE,
  comment = ""
  )

```

# Data preparation

```{r library setup}
# from Bioconductor (install by running: BiocManager::install("x") | x = name of the package)
# BiocManager::install(c("DESeq2", "phyloseq", "microbiome"))


# remotes::install_github("g-antonello/gautils")
# remotes::install_github("mikemc/speedyseq")

library(gautils)
library(microbiome)
#personal functions

# graphics packages
library(ggpubr)
library(magrittr)
library(tidyverse)

#github functions
# devtools::install_github("bryandmartin/corncob")
#devtools::install_github("gaospecial/ggvenn")
library(speedyseq)
theme_set(theme_light())

```

## Load microbiome data

```{r, echo= FALSE}

chrismb_phy <- readRDS("C:/Users/gantonello/sensitive_data/CHRISMB/Microbiome_data/05_chrismb_ONLY_NewBatch_11_2021.rds")

```

## Smoking variables' curation

```{r}
###############################

levels(chrismb_phy@sam_data$smoking_exposure_ga) <- c("Current", "Former", "Never")

chrismb_phy@sam_data$smoking_exposure_ga <- factor(chrismb_phy@sam_data$smoking_exposure_ga, levels = c("Never", "Former", "Current"))

###############################

levels(chrismb_phy@sam_data$smoking_habits_rm) <- c("Never", "Former", "Current (R)", "Current (NR)")

chrismb_phy <- speedyseq::rename_sample_data(chrismb_phy, years_since_quit.OR.reduced_smoking = years_since_quit_smoking)

```

```{r}

### tobacco g per day (bin 5)


# replace NAs with zeros (arbitrary, if a person can't answer how much, maybe it's very little)
chrismb_phy@sam_data$current_tobacco_g_per_day <- ifelse(is.na(chrismb_phy@sam_data$current_tobacco_g_per_day), 0, chrismb_phy@sam_data$current_tobacco_g_per_day)

# categorized 5 by 5 
chrismb_phy@sam_data$current_tobacco_g_per_day_bin5cat <- cut(chrismb_phy@sam_data$current_tobacco_g_per_day, 
                                                              breaks = c(0,0.5,2,5,10,15,20,25,30,60), 
                                                              include.lowest = TRUE)

# binned 2 by 2 continuous
chrismb_phy@sam_data$current_tobacco_g_per_day_bin5cont <- cut(
  chrismb_phy@sam_data$current_tobacco_g_per_day, 
  breaks = c(0,0.5,2,5,10,15,20,25,30,60), 
  labels = c(0.5,2,5,10,15,20,25,30,60), 
  include.lowest = TRUE
) %>% 
  as.character() %>% 
  as.double()

```

```{r}

### tobacco g per day (bin 2)

# categorized 2 by 2

chrismb_phy@sam_data$current_tobacco_g_per_day_bin2cat <- cut(chrismb_phy@sam_data$current_tobacco_g_per_day, c(0,0.5,seq(2,30, 2), 60), include.lowest = TRUE)

# 2 by 2 continuous
chrismb_phy@sam_data$current_tobacco_g_per_day_bin2cont <- cut(
  chrismb_phy@sam_data$current_tobacco_g_per_day, 
  breaks = c(0,0.5,seq(2,30, 2), 60), labels = c(0.5,seq(2,30, 2), 60), 
  include.lowest = TRUE) %>% 
  as.character() %>% 
  as.double()

```

```{r, message=FALSE, warning=FALSE}

### Specify how many years ago Former smokers quit or reduced
# Definitions for both **continuous** and **binned (2 by 2)** variables. This will come in handy in the years-since-quitting analysis

chrismb_phy <- meta(chrismb_phy) %>% 
  mutate(smoking_habit_quit.OR.reduced_years = case_when(
    smoking_exposure_ga == "Former" & is.na(years_since_quit.OR.reduced_smoking) ~ "Former_unknown",
    smoking_exposure_ga == "Former" & years_since_quit.OR.reduced_smoking <= 5 ~ paste(smoking_exposure_ga, years_since_quit.OR.reduced_smoking, sep = "_"),
    smoking_exposure_ga == "Former" & years_since_quit.OR.reduced_smoking > 5 ~ paste(smoking_exposure_ga, "6+", sep = "_"),
    smoking_exposure_ga == "Never" | smoking_exposure_ga == "Current" ~ as.character(smoking_exposure_ga)
  ),
  
  smoking_habit_quit.OR.reduced_years_binned = case_when(
    smoking_exposure_ga == "Former" &
      parse_number(smoking_habit_quit.OR.reduced_years) <= 1 ~ "Former [0,1]",
    smoking_exposure_ga == "Former" &
      between(parse_number(smoking_habit_quit.OR.reduced_years), 2, 3) ~ "Former [2,3]",
    smoking_exposure_ga == "Former" &
      between(parse_number(smoking_habit_quit.OR.reduced_years), 4, 5) ~ "Former [4,5]",
    smoking_exposure_ga == "Former" &
      parse_number(smoking_habit_quit.OR.reduced_years) > 5 ~
      "Former 6+",
    smoking_exposure_ga == "Never" |
      smoking_exposure_ga == "Current" ~ as.character(smoking_exposure_ga),
    smoking_habit_quit.OR.reduced_years == "Former_unknown" ~ "Former_unknown"
  )
  
  ) %>% 
  phy_substitute_metadata(chrismb_phy, .)

chrismb_phy@sam_data$years_since_quit.OR.reduced_smoking_binned <- cut(chrismb_phy@sam_data$years_since_quit.OR.reduced_smoking, c(0,1,2,3,5,10,61))

```

### Ultimate smoking variable for plots: "smoking_detailed"

the idea is to specify current_dosage, former_years, and never, so we can play around with plots using one single variable

```{r}

chrismb_phy@sam_data$smoking_detailed <-
  ifelse(
    chrismb_phy@sam_data$smoking_exposure_ga == "Current",
    paste0(
      "Current ",
      chrismb_phy@sam_data$current_tobacco_g_per_day_bin5cat,
      " g"
    ),
    ifelse(
      chrismb_phy@sam_data$smoking_exposure_ga == "Former",
      paste0(
        "Former ", chrismb_phy@sam_data$years_since_quit.OR.reduced_smoking_binned, " y"
      ),
      "Never"
    )
  )


nice_order_current <- sort(grep("Current", unique(chrismb_phy@sam_data$smoking_detailed), value = TRUE))[c(9,1,4,8,2,3,5,6,7)] %>% rev()

nice_order_former <- sort(grep("Former", unique(chrismb_phy@sam_data$smoking_detailed), value = TRUE))[c(7,1,2,4,5,6,3)]

final_levels <- c(nice_order_current,nice_order_former, "Never")


# make ordered factor, useful for plotting
chrismb_phy@sam_data$smoking_detailed <- factor(chrismb_phy@sam_data$smoking_detailed, levels = final_levels)



chrismb_phy <- chrismb_phy %>% 
  mutate_sample_data(smoking_betsy_extra = ifelse(smoking_exposure_ga == "Never", "ever", str_extract(smoking_detailed, pattern = "\\ .*")),
                     smoking_betsy_extra = paste0(substr(smoking_exposure_ga, 1,1), smoking_betsy_extra)
                     )


chrismb_phy@sam_data$smoking_betsy_extra %<>%
  factor(levels = sort(unique(chrismb_phy@sam_data$smoking_betsy_extra))[c(6,5,3,2,7,4,1,8,9,10,12,13,14,11,15)])

```


## Microbiome data filtering

```{r, echo=FALSE}

threshold_prevalence <-  1/100
threshold_detection <- 10

# this filtering 
chrismb_phy_core <- microbiome::core(chrismb_phy, detection = threshold_detection, prevalence = threshold_prevalence)

```

```{r, echo=FALSE}
tmp <- rbind(c("-|-", paste(threshold_prevalence,threshold_detection, sep = "|")),
             c(format(sum(sample_sums(chrismb_phy)), scientific = T,digits = 3),format(sum(sample_sums(chrismb_phy_core)), scientific = T,digits = 3)),
             cbind(sapply(c(
               "ASV",
               "Species",
               "Genus",
               "Family",
               "Order",
               "Class",
               "Phylum",
               "Kingdom"
             ),
             function(lvl)
               tryCatch(ntaxa(tax_glom(chrismb_phy, lvl)), error = function(e) return(0))),
             sapply(c(
               "ASV",
               "Species",
               "Genus",
               "Family",
               "Order",
               "Class",
               "Phylum",
               "Kingdom"
             ),
             function(lvl)
               tryCatch(ntaxa(tax_glom(chrismb_phy_core, lvl)), error = function(e) return(0)))
             ))
# 
# tmp2 <- rbind(tmp, 
#       cbind(
#         sapply(c(
#     "ASV",
#     "Species",
#     "Genus",
#     "Family",
#     "Order",
#     "Class",
#     "Phylum",
#     "Kingdom"
#   ),
#   function(lvl)
#     tryCatch(ntaxa(tax_glom(chrismb_phy, lvl)), error = function(e) return(0))),
#   sapply(c(
#     "ASV",
#     "Species",
#     "Genus",
#     "Family",
#     "Order",
#     "Class",
#     "Phylum",
#     "Kingdom"
#   ),
#   function(lvl)
#     tryCatch(ntaxa(tax_glom(chrismb_phy_core, lvl)), error = function(e) return(0)))
#   ))


rownames(tmp) <- c(
  "Prevalence|Detection threshold",
  "Number of Reads",
  "ASV",
  "Species",
  "Genus",
  "Family",
  "Order",
  "Class",
  "Phylum",
  "Kingdom"
)

colnames(tmp) <- c("Unfiltered", "Filtered")

DT::datatable(tmp, caption = "CHRISMB read and number of different taxonomic ranks before and after filtering by prevalence and detection with the function 'microbiome::core'.")

# make an indicative plot of how many taxonomies are lost during filtering

# tmp[3:nrow(tmp),] %>% as.data.frame() %>% rownames_to_column("TaxRank") %>% pivot_longer(cols = c("Unfiltered", "Filtered")) %>% mutate(TaxRank = factor(TaxRank, levels =c("ASV", "Species", "Genus", "Family", "Order", "Class", "Phylum", "Kingdom")), value = as.double(value)) %>% ggplot(aes(x = TaxRank, y = log(value), fill = name))+ geom_bar(stat = "identity", position = "dodge")

```


```{r}

chrismb_phy_core_genus <- speedyseq::tax_glom(chrismb_phy_core, "Genus")
taxa_names(chrismb_phy_core_genus) <- chrismb_phy_core_genus@tax_table@.Data[,6]

```

## Sample exclusion criteria applied 

```{r}

# Q1 stands for "question 1"

# dir.create("../results/Q1/1.1_alpha diversity/", recursive = TRUE, showWarnings = FALSE)
dir.create("../results/Q1/1.2_beta diversity/", recursive = TRUE, showWarnings = FALSE)
dir.create("../results/Q1/1.3_differential abundance/", recursive = TRUE, showWarnings = FALSE)
dir.create("../results/Q1/1.4_CST/", recursive = TRUE, showWarnings = FALSE)

##############################
# FILTER NAs in the variables of interest

phy_Q1 <- chrismb_phy_core %>%
  filter_sample_data(!is.na(age_cat)) %>% 
  filter_sample_data(!is.na(sex)) %>%
  filter_sample_data(!is.na(smoking_habits_rm)) %>%  
  filter_sample_data(!is.na(how_many_teeth)) %>% 
  filter_sample_data(used_antibiotics_last_3_months == "no")  



phy_Q1 <- subset_taxa(phy_Q1, taxa_sums(phy_Q1) > 0)



# tot = 1605, done on 03-Jan-2021

cat("\nNumber of samples in the phyloseq for question 1:\n")
nsamples(phy_Q1)

phy_Q1_meta <- meta(phy_Q1)
```

# Pathway diff. abundance

PICRUSt2 input data were generated using the full CHRISMB dataset filtered for prevalence and detection (resp. `1%` and `10` counts), which had 623 features for 1928 samples. I though I would do this for all samples once and for all, the set of ASVs doesn't change if I pick the smoking paper subset or the CHRISMB full one. The discriminative part is the set of ASVs.

Results are stored in `/home/gantonello/CHRISMB/PICRUSt2_prediction_v2.5/` subdivided into stratified and unstratified. the R script to generate the input data is in each of those two base directories.

Then I imported the two informative datasets:

 - EC codes per sample (like looking at single enzyme level)
 - pathway abundances (like looking at the aggregated enzymes)


**HOW DOES PICRUSt2 ASSIGN EC AND PATHWAYS?** It has some mapping files inside the environment.

If you run the `picrust_pipeline.py` with default settings, PICRUSt2 will: 

   1. Assign the ASVs reference seqs to the closest bacterial genome
   2. Iif the distance from the closest annotated reference genome is less than 2, it assumes identity and will assign a set of potential functions using `/home/gantonello/miniconda3/envs/picrust2/lib/python3.8/site-packages/picrust2/default_files/prokaryotic/ec.txt.gz`
   3. EC numbers are converted into enzyme names with `/home/gantonello/miniconda3/envs/picrust2/lib/python3.8/site-packages/picrust2/default_files/pathway_mapfiles/ec_level4_to_metacyc_rxn.tsv`
   4. these enzyme names are assigned to pathway using `/home/gantonello/miniconda3/envs/picrust2/lib/python3.8/site-packages/picrust2/default_files/pathway_mapfiles/metacyc_path2rxn_struc_filt_pro.txt`

Then the names get nicer names with a simple, final function, and that's what I imported for the analysis.

Let's start with pathways, correcting for **age category, sex, and N° teeth**, as the rest of the paper draft

```{r pathways_data_loading}
picrust_pathways_matrix <- data.table::fread("../picrust2_results_data/path_abun_unstrat_descrip.tsv.gz") %>% 
  dplyr::select(-pathway) %>% 
  column_to_rownames("description") %>% 
  as.matrix()

picrust_pathways_matrix %<>% round(0)

picrust_pathways_matrix_Q1 <- picrust_pathways_matrix[!grepl("super", rownames(picrust_pathways_matrix)),sample_names(phy_Q1)]

nPathwaysBonferroni <- nrow(picrust_pathways_matrix_Q1)


#create a map data frame for pathway names

pathway_names_map_ALL <- data.frame(original_name = rownames(picrust_pathways_matrix_Q1),
                                fixed_name = make.names(rownames(picrust_pathways_matrix_Q1)))

```

## Diff abund 1: DESeq2

```{r, fig.align='center'}
#############################################################################
library(DESeq2)

deseq_object_picrust <- phyloseq(otu_table(picrust_pathways_matrix_Q1, taxa_are_rows = TRUE), sample_data(phy_Q1))  %>% 
  core(detection = 10, prevalence = 0.05) %>% 
  phyloseq_to_deseq2(design = ~ sex +age_cat + how_many_teeth + smoking_exposure_ga)

geom_means <- apply(counts(deseq_object_picrust), 1, function(x) exp(mean(log(x[x>0]))))


# estimate size factors, important to account for library size variations
estim_size <- estimateSizeFactors(deseq_object_picrust, geoMeans = geom_means)

# compute the DESeq2 glm, accounting for the estimate size factor and geometric means

deseq2_results_picrust <- DESeq(estim_size, fitType = "local")

picrust_DA_results_dfs <- list("Current/Former" = results(deseq2_results_picrust, contrast = c("smoking_exposure_ga","Current", "Former"), 
                                                          pAdjustMethod = "bonferroni"),
                               "Current/Never" = results(deseq2_results_picrust, contrast = c("smoking_exposure_ga","Current", "Never"), 
                                                          pAdjustMethod = "bonferroni")
                               ) %>% 
  lapply(as.data.frame) %>% 
  lapply(rownames_to_column, "pathway")


# # filter significant results and prepare data frame for plotting
# 
# signif_pathways <- lapply(picrust_DA_results_dfs, filter, padj < 0.05 & abs(log2FoldChange) > 0.5) %>% 
#   lapply("[[", "pathway") %>% 
#   Reduce(union,.)
# 
# picrust_DA_results_dfs_signif <- lapply(
#   picrust_DA_results_dfs, filter, pathway %in% signif_pathways) %>% 
#   bind_rows(.id = "Contrast") %>% 
#   as_tibble()
# 
# 
# ggplot(picrust_DA_results_dfs_signif, aes(x = log2FoldChange, y = pathway, color = Contrast, group = Contrast))+
#   geom_point(alpha = 0.5, position = position_jitter(seed = 1234))+
#   geom_errorbar(aes(x = log2FoldChange, y = pathway, color = Contrast, group = Contrast, xmin = log2FoldChange - lfcSE, xmax = log2FoldChange + lfcSE), position = position_jitter(seed = 1234), width = 0.2)+
#   geom_vline(xintercept = 0)
```

## Diff abund 2: LinDA

```{r}
#devtools::install_github("zhouhj1994/linDA")
library(LinDA)

linDA_model <- linda(otu.tab = picrust_pathways_matrix_Q1, 
                   meta = phy_Q1_meta, formula = '~ sex +age_cat + how_many_teeth + smoking_exposure_ga', 
                   alpha = 0.05/nPathwaysBonferroni,
                   prev.cut = 0.1, 
                   lib.cut = 1000, 
                   winsor.quan = 0.97,
                   adaptive = T)

```


## Diff abund 3: Maaslin2

```{r, include=FALSE}

library(Maaslin2)

dir.create("../results/Maaslin2_DA", showWarnings = FALSE)


if(!file.exists("../results/Maaslin2_DA/significant_results.tsv")){
Maaslin2(
    input_data = picrust_pathways_matrix_Q1, 
    input_metadata = phy_Q1_meta, 
    output = "../results/Maaslin2_DA", 
    analysis_method = "LM",
    fixed_effects = c("age_cat", "sex", "how_many_teeth", "smoking_exposure_ga"),
    reference = c("smoking_exposure_ga, Never"),
    transform = "LOG",
    normalization = "TMM"
  )

}else{

maaslin_results <- read.table("../results/Maaslin2_DA/significant_results.tsv", header = T) %>% 
  mutate(feature = pathway_names_map_ALL$original_name[match(feature, pathway_names_map_ALL$fixed_name)])
}
```

Maaslin2 has a serious problem dealing with false positives... But nitrate reduction decrease is confirmed even here

## Diff abund 4: ALDEx2 (glm)

```{r, cache=TRUE}
library(ALDEx2)

if(!file.exists("../results/DiffAbund_multimethod/ALDEx2.rawResults.list.RDS")){
model_mtx <- model.matrix(~ how_many_teeth + sex + age_cat + smoking_exposure_ga, 
                          data = dplyr::select(phy_Q1_meta, how_many_teeth, sex, age_cat, smoking_exposure_ga) %>% .[intersect(colnames(picrust_pathways_matrix_Q1), rownames(phy_Q1_meta)),])

aldex.glm.pathway_smoking_ga <- aldex.clr(picrust_pathways_matrix_Q1[, intersect(colnames(picrust_pathways_matrix_Q1), rownames(phy_Q1_meta))],
                            model_mtx,
                            mc.samples = 200, 
                            denom = "all"
                            )

glm.test_pathway_smoking_ga <- aldex.glm(aldex.glm.pathway_smoking_ga, model_mtx)

glm.effects_pathway_smoking_ga <- aldex.glm.effect(aldex.glm.pathway_smoking_ga, verbose = FALSE)

aldex.results <- list(
  clr.model = aldex.glm.pathway_smoking_ga,
  glm.test = glm.test_pathway_smoking_ga,
  eff_size.test = glm.effects_pathway_smoking_ga
)


saveRDS(aldex.results, "../results/DiffAbund_multimethod/ALDEx2.rawResults.list.RDS")

}else{
  aldex.results <- readRDS("../results/DiffAbund_multimethod/ALDEx2.rawResults.list.RDS")
}

```

## Diff abund 5: ANCOM-BC

```{r}

library(ANCOMBC)

t0 <- Sys.time()
ancom_0 <- ancombc(data = TreeSummarizedExperiment::TreeSummarizedExperiment(assays = list(PICRUSt2 = picrust_pathways_matrix_Q1),
                                                                             colData = phy_Q1_meta), 
        assay_name = "PICRUSt2", 
        tax_level = NULL,
        formula = "how_many_teeth + sex + age_cat + smoking_exposure_ga", 
        group = "smoking_exposure_ga",
        struc_zero = F, 
        p_adj_method = "bonferroni")

Sys.time() - t0

ancom_res_current_never <- lapply(ancom_0$res, dplyr::select, contains("gaCurrent")) %>% 
  Reduce(cbind.data.frame, .) %>% 
  set_names(names(ancom_0$res)) %>% 
  mutate(feature = ancom_0$res$lfc$taxon) %>% 
  relocate(feature, .before = names(ancom_0$res)[1])

ancom_res_former_never <- lapply(ancom_0$res, dplyr::select, contains("gaFormer")) %>% 
  Reduce(cbind.data.frame, .) %>% 
  set_names(names(ancom_0$res)) %>% 
  mutate(feature = ancom_0$res$lfc$taxon) %>% 
  relocate(feature, .before = names(ancom_0$res)[1])

```


## Final summary of results

Results filtered by two conditions:

  1. P-value, corrected for Bonferroni, must be below 0.05
  2. The effect size, irrespectively of the way it is estimated, must be larger than 0.5
  
```{r, include=FALSE}

# ALDEx2
aldex_glinDAsmoking_signif <- aldex.results$glm.test %>% 
  as.data.frame() %>% 
  dplyr::select(contains("smoking_exposure_gaCurrent")) %>% 
  dplyr::rename_all(.funs = function(x) gsub(pattern =  ".*\\:", replacement = "", x = x)) %>% 
  rownames_to_column("pathway") %>% 
  as_tibble() %>% 
  mutate(pval.bonferroni = pval * nPathwaysBonferroni) %>% 
  filter(pval.bonferroni < 0.05, abs(Est) > 0.5)

# MaAsLin2  
maaslin_signif <- maaslin_results %>% 
  filter(metadata == "smoking_exposure_ga") %>% 
  dplyr::select(feature, value, coef, stderr, pval, qval, N.not.0) %>% 
  mutate(pval.bonferroni = pval * nPathwaysBonferroni) %>% 
  filter(pval.bonferroni < 0.05 & abs(coef) > 0.5 & value == "Current")

# Basic Linear LinDA
linDAresults_pathway_signif_Current <- linDA_model$output$smoking_exposure_gaCurrent %>% 
  filter(reject & abs(log2FoldChange) > 0.5) %>% 
  rownames_to_column("pathway")

# DESeq2 signif results

deseq2_signif_results <- picrust_DA_results_dfs$`Current/Never` %>% 
  as_tibble() %>% 
  filter(padj < 0.05 & abs(log2FoldChange) > 0.5)

# ANCOM-BC

ancom2_signif_results <- ancom_res_current_never %>% 
  filter(q_val < 0.05 & abs(lfc) > 0.5)

all_models_signif_pwys <- list(ALDEx2 = aldex_glinDAsmoking_signif %>% dplyr::select(pathway, Est) %>% set_names(c("pathway", "ALDEx2")), 
                    MaAsLin2 = maaslin_signif %>% dplyr::select(feature, coef) %>% set_names(c("pathway", "MaAsLin2")), 
                    linDA = linDAresults_pathway_signif_Current %>% dplyr::select(pathway,log2FoldChange) %>% set_names(c("pathway", "linDA")), 
                    DESeq2 = deseq2_signif_results %>% dplyr::select(pathway, log2FoldChange) %>% set_names(c("pathway", "DESeq2")),
                    `ANCOM-BC` = ancom2_signif_results %>% dplyr::select(feature, lfc) %>% set_names(c("pathway", "ANCOM-BC"))
                    ) %>% 
  Reduce(full_join, .)

n_methods_used <- ncol(all_models_signif_pwys) -1 

frequency_signif_pathway <- pivot_longer(all_models_signif_pwys, cols = !starts_with("pathway"), names_to = "DA_method", values_to = "da_eff_size") %>% 
  filter(!is.na(da_eff_size)) %>% 
  group_by(pathway) %>% 
  tally()

signif_pways.Majority <- filter(frequency_signif_pathway, n > n_methods_used/2)$pathway

# effect size concordance

pathways_union <- all_models_signif_pwys$pathway

pathways_intersect <- all_models_signif_pwys %>% 
  .[complete.cases(.),] %>% 
  .$pathway

dir.create("../results/DiffAbund_multimethod/", recursive = TRUE, showWarnings = FALSE)
saveRDS(pathways_union, "../results/DiffAbund_multimethod/significant_PWYs_union.RDS")
saveRDS(pathways_intersect, "../results/DiffAbund_multimethod/significant_PWYs_intersect.RDS")
saveRDS(signif_pways.Majority,  "../results/DiffAbund_multimethod/significant_PWYs_majorityCases.RDS")

heatmap_plot <- ggplotify::as.ggplot(all_models_signif_pwys %>% 
  filter(pathway %in% signif_pways.Majority) %>% 
  column_to_rownames("pathway") %>% 
  mutate_all(.funs = function(x) ifelse(is.na(x), -5, x)) %>% 
  as.matrix() %>% 
  pheatmap::pheatmap(angle_col = 315, scale = "none", main = "Darkblue colors are NAs (arbitrarily set to = -5)")
)

plot_correlations_eff.sizes <- grid::grid.grabExpr(print(all_models_signif_pwys %>% 
  column_to_rownames("pathway") %>% 
 #mutate_all(.funs = function(x) ifelse(is.na(x), 0, x)) %>% 
  #as.matrix() %>% 
  GGally::ggpairs()))


venn_plot <- ggvenn::ggvenn(list(ALDEx2 = aldex_glinDAsmoking_signif %>% dplyr::select(pathway, Est) %>% set_names(c("pathway", "ALDEx2")), 
                    MaAsLin2 = maaslin_signif %>% dplyr::select(feature, coef) %>% set_names(c("pathway", "MaAsLin2")), 
                    linDA = linDAresults_pathway_signif_Current %>% dplyr::select(pathway,log2FoldChange) %>% set_names(c("pathway", "linDA")), 
                    DESeq2 = deseq2_signif_results %>% dplyr::select(pathway, log2FoldChange) %>% set_names(c("pathway", "DESeq2"))
                    ) %>% lapply("[[", "pathway"))

```

Notice that many pathways are actually highly correlated, like the quinols. let's see this in a heatmap

```{r, fig.width=11, fig.height=7}

signif_pathways_names <- readRDS("../results/DiffAbund_multimethod/significant_PWYs_majorityCases.RDS")

pathways_all_phyloseq <- phyloseq(sample_data(phy_Q1_meta), otu_table(picrust_pathways_matrix_Q1, taxa_are_rows = T))
pathway_names_map <- data.frame(original_names = signif_pathways_names,
                                fixed_names = make.names(signif_pathways_names)
                                )
dplyr::select(pathways_all_phyloseq %>% phy_transform("compositional") %>% phy_OtuMetaTable(), all_of(pathway_names_map$original_name)) %>% cor(method = "spearman") %>% pheatmap::pheatmap(show_colnames = FALSE, main = "Correlation between significant pathways")

```

```{r, fig.height=8, fig.width=11}

ggarrange(ggarrange(plot_correlations_eff.sizes, venn_plot, nrow = 2, ncol = 1), heatmap_plot, nrow = 1, ncol = 2)

all_models_signif_pwys %>% 
  column_to_rownames("pathway") %>% 
 #mutate_all(.funs = function(x) ifelse(is.na(x), 0, x)) %>% 
  #as.matrix() %>% 
  GGally::ggpairs(title = "Correlations of effect sizes between methods",progress = F)

all_models_signif_pwys %>% 
  column_to_rownames("pathway") %>% 
  mutate_all(.funs = function(x) ifelse(is.na(x), -5, x)) %>% 
  pheatmap::pheatmap()
venn_plot

heatmap_plot
```

The nitrate reduction pathway is always significant,  and decreased across studies, but it is not one of the most strongly affected ones. Nevertheless it is quite a significant taxon.
Other important pathways are **Aerobic-associated taxa**, for instance the quinols pathways, that are proteins required to perform the electron transport chain in respiration.

# Boxplots significant pathways with smoking detailed

## Whole cohort

**NB**: 

```{r}

theme_set(theme_light())

signif_pathways_names <- readRDS("../results/DiffAbund_multimethod/significant_PWYs_majorityCases.RDS")

pathways_all_phyloseq <- phyloseq(sample_data(phy_Q1_meta), otu_table(picrust_pathways_matrix_Q1, taxa_are_rows = T)) %>% 
  mutate_sample_data(smoking_betsy_extra = ifelse(smoking_exposure_ga == "Never", "ever", str_extract(smoking_detailed, pattern = "\\ .*")),
                     smoking_betsy_extra = paste0(substr(smoking_exposure_ga, 1,1), smoking_betsy_extra)
                     ) %>% 
  filter_sample_data(!(smoking_betsy_extra %in% c("C (30,60] g", "F NA y")))

pathways_all_phyloseq@sam_data$smoking_betsy_extra %<>%
  factor(levels = sort(unique(pathways_all_phyloseq@sam_data$smoking_betsy_extra))[c(6,5,3,2,7,4,1,8,9,10,12,13,14,11,15)])
#table(pathways_all_phyloseq@sam_data$smoking_betsy_extra)

#levels(pathways_all_phyloseq@sam_data$smoking_exposure_ga) %<>% rev()

pathway_names_map <- data.frame(original_names = signif_pathways_names,
                                fixed_names = make.names(signif_pathways_names)
                                )

taxa_names(pathways_all_phyloseq) %<>% make.names()

#levels(pathways_all_phyloseq@sam_data$smoking_betsy_extra)

```

### relative abundance pathways

```{r}
pathways_all_phyloseq_otuMeta_rel <- pathways_all_phyloseq %>% 
  phy_transform("compositional") %>% 
  phy_OtuMetaTable() %>% 
  mutate(smoking_betsy_extra = add_N_to_catVar(smoking_betsy_extra))

boxplots_relAb_detailed <- sapply(pathway_names_map$fixed_names, function(pwy) ggplot(pathways_all_phyloseq_otuMeta_rel, aes_string(x = "smoking_betsy_extra", y = pwy, color = "smoking_exposure_ga"))+
    geom_boxplot()+
    geom_point(alpha = 0.5, position = position_jitter())+
    labs(x = NULL, y = "Rel. Abund.", color = "Smoking status")+
    theme(axis.text.x = element_text(angle = 60, hjust = 1))+
    scale_color_manual(breaks = rev(levels(pathways_all_phyloseq_otuMeta_rel$smoking_exposure_ga)), values = ggsci::pal_jco()(4)[c(4,2,1)]),
  USE.NAMES = T,
  simplify = FALSE)


# scale_color_manual(values = ggsci::pal_jco()(4)[c(4,2,1)]),

boxplots_relAb_ga <- sapply(pathway_names_map$fixed_names, function(pwy) 
  ggplot(pathways_all_phyloseq_otuMeta_rel %>% 
           mutate(smoking_exposure_ga = factor(smoking_exposure_ga, levels = c("Current", "Former", "Never"))), aes_string(x = "smoking_exposure_ga", y = pwy, color = "smoking_exposure_ga"))+
    geom_boxplot()+
    #geom_point(alpha = 0.5, position = position_jitter())+
    labs(x = NULL, y = NULL, color = "Smoking status")+
    theme(axis.text.x = element_text(angle = 60, hjust = 1),
          legend.position = "none")+
    #EnvStats::stat_n_text(angle = 90, hjust = 1, y.pos = -0.01)+
    #ylim(-0.15, 1)+
    scale_color_manual(values = ggsci::pal_jco()(4)[c(4,2,1)]),
  USE.NAMES = T,
  simplify = FALSE)


mean_values_relAb <- pathways_all_phyloseq_otuMeta_rel %>% 
  group_by(smoking_betsy_extra) %>% 
  summarise_at(vars(pathway_names_map$fixed_names), .funs = mean)

boxplots_relAb_detailed <- lapply(1:length(boxplots_relAb_detailed), function(i) boxplots_relAb_detailed[[i]] + 
                            geom_line(data = mean_values_relAb, mapping = aes_string(x = "smoking_betsy_extra", y = colnames(mean_values_relAb)[i+1], group = 1), color = "black")+
                            geom_point(data = mean_values_relAb, mapping = aes_string(x = "smoking_betsy_extra", y = colnames(mean_values_relAb)[i+1]), color = "black")
                          )

```

### clr

```{r}
pathways_all_phyloseq_otuMeta_clr <- pathways_all_phyloseq %>% 
  phy_transform("clr") %>% 
  phy_OtuMetaTable() %>% 
  mutate(smoking_betsy_extra = add_N_to_catVar(smoking_betsy_extra))

boxplots_clr_detailed <- sapply(pathway_names_map$fixed_names, function(pwy) ggplot(pathways_all_phyloseq_otuMeta_clr, aes_string(x = "smoking_betsy_extra", y = pwy, color = "smoking_exposure_ga"))+
    geom_boxplot()+
    geom_point(alpha = 0.5, position = position_jitter())+
    labs(x = NULL, y = "Center-log Ratio", color = "Smoking status")+
    theme(axis.text.x = element_text(angle = 60, hjust = 1))+
    scale_color_manual(breaks = rev(levels(pathways_all_phyloseq_otuMeta_rel$smoking_exposure_ga)), values = ggsci::pal_jco()(4)[c(4,2,1)]),
  USE.NAMES = T,
  simplify = FALSE)

boxplots_clr_ga <- sapply(pathway_names_map$fixed_names, function(pwy) 
  ggplot(pathways_all_phyloseq_otuMeta_clr %>% 
           mutate(smoking_exposure_ga = factor(smoking_exposure_ga, levels = c("Current", "Former", "Never"))), aes_string(x = "smoking_exposure_ga", y = pwy, color = "smoking_exposure_ga"))+
    geom_boxplot()+
    #geom_point(alpha = 0.5, position = position_jitter())+
    labs(x = NULL, y = NULL, color = "Smoking status")+
    theme(axis.text.x = element_text(angle = 60, hjust = 1),
          legend.position = "none")+
    #EnvStats::stat_n_text(angle = 90, hjust = 1, y.pos = -0.01)+
    #ylim(-0.15, 1)+
    scale_color_manual(values = ggsci::pal_jco()(4)[c(4,2,1)]),
  USE.NAMES = T,
  simplify = FALSE)


mean_values_clr <- pathways_all_phyloseq_otuMeta_clr %>% 
  group_by(smoking_betsy_extra) %>% 
  summarise_at(all_of(pathway_names_map$fixed_names), .funs = mean)

boxplots_clr_detailed <- lapply(1:length(boxplots_clr_detailed), function(i) boxplots_clr_detailed[[i]] + 
                            geom_line(data = mean_values_clr, mapping = aes_string(x = "smoking_betsy_extra", y = colnames(mean_values_clr)[i+1], group = 1), color = "black")+
                            geom_point(data = mean_values_clr, mapping = aes_string(x = "smoking_betsy_extra", y = colnames(mean_values_clr)[i+1]), color = "black")
                          )

```

But the problem here is the approximation with the generic smoking variable, which has only 3 groups.. to better visualize this we should do more of either a boxplot or scatterplot with error bars plotting each pathway against that smoking variable.

### Combine plots

```{r}

panels_boxplots <- suppressWarnings(lapply(1:length(boxplots_relAb_detailed), function(i) 
  ggarrange(
  boxplots_relAb_detailed[[i]] + theme(axis.text.x = element_blank()),
  boxplots_relAb_ga[[i]]+ theme(axis.text.x = element_blank()),
  boxplots_clr_detailed[[i]],
  boxplots_clr_ga[[i]],
  common.legend = TRUE, legend = "right", heights = c(0.8,1), widths = c(1, 0.7)
  ) %>% annotate_figure(top = text_grob(label = pathway_names_map %>% filter(fixed_names == pathway_names_map$fixed_names[i]) %>% .$original_names, face = "bold", color = "darkred", size = 12))))


ggexport(plotlist = panels_boxplots, 
         filename = "../results/panels_boxplots_signif_pathways.pdf",
         height = 7, 
         widht = 9)
```


It is clear that some signals perfectly overlap. this means we shouldn't treat them as a total set of pathways. A way around this might be doing the diff. abund. on the predicted EC numbers and only after that collapse the into pathways. **MOST** of the issues are coming from superpathways, which, talking to F. Asnicar, he says they always remove them before doin any analysis

## Only 20+ teeth

**NB**: 
If I pick only significant pathways, I am leaving out the nitrate assimilatory pathway, which had an interesting trend. 

### relative abundance pathways

```{r}
pathways_all_phyloseq_otuMeta_rel <- pathways_all_phyloseq %>% 
  phy_transform("compositional") %>% 
  filter_sample_data(how_many_teeth == "20+") %>% 
  phy_OtuMetaTable() %>% 
  mutate(smoking_betsy_extra = add_N_to_catVar(smoking_betsy_extra))

boxplots_relAb_detailed <- sapply(pathway_names_map$fixed_names, function(pwy) ggplot(pathways_all_phyloseq_otuMeta_rel, aes_string(x = "smoking_betsy_extra", y = pwy, color = "smoking_exposure_ga"))+
    geom_boxplot()+
    geom_point(alpha = 0.5, position = position_jitter())+
    labs(x = NULL, y = "Rel. Abund.", color = "Smoking status")+
    theme(axis.text.x = element_text(angle = 60, hjust = 1))+
    scale_color_manual(breaks = rev(levels(pathways_all_phyloseq_otuMeta_rel$smoking_exposure_ga)), values = ggsci::pal_jco()(4)[c(4,2,1)]),
  USE.NAMES = T,
  simplify = FALSE)

boxplots_relAb_ga <- sapply(pathway_names_map$fixed_names, function(pwy) 
  ggplot(pathways_all_phyloseq_otuMeta_rel %>% 
           mutate(smoking_exposure_ga = factor(smoking_exposure_ga, levels = c("Current", "Former", "Never"))), aes_string(x = "smoking_exposure_ga", y = pwy, color = "smoking_exposure_ga"))+
    geom_boxplot()+
    #geom_point(alpha = 0.5, position = position_jitter())+
    labs(x = NULL, y = NULL, color = "Smoking status")+
    theme(axis.text.x = element_text(angle = 60, hjust = 1),
          legend.position = "none")+
    #EnvStats::stat_n_text(angle = 90, hjust = 1, y.pos = -0.01)+
    #ylim(-0.15, 1)+
    scale_color_manual(values = ggsci::pal_jco()(4)[c(4,2,1)]),
  USE.NAMES = T,
  simplify = FALSE)


mean_values_relAb <- pathways_all_phyloseq_otuMeta_rel %>% 
  group_by(smoking_betsy_extra) %>% 
  summarise_at(all_of(pathway_names_map$fixed_names), .funs = mean)

boxplots_relAb_detailed <- lapply(1:length(boxplots_relAb_detailed), function(i) boxplots_relAb_detailed[[i]] + 
                            geom_line(data = mean_values_relAb, mapping = aes_string(x = "smoking_betsy_extra", y = colnames(mean_values_relAb)[i+1], group = 1), color = "black")+
                            geom_point(data = mean_values_relAb, mapping = aes_string(x = "smoking_betsy_extra", y = colnames(mean_values_relAb)[i+1]), color = "black")
                          )

```

### clr

```{r}
pathways_all_phyloseq_otuMeta_clr <- pathways_all_phyloseq %>% 
  phy_transform("clr") %>% 
  filter_sample_data(how_many_teeth == "20+") %>% 
  phy_OtuMetaTable() %>% 
  mutate(smoking_betsy_extra = add_N_to_catVar(smoking_betsy_extra))

boxplots_clr_detailed <- sapply(pathway_names_map$fixed_names, function(pwy) ggplot(pathways_all_phyloseq_otuMeta_clr, aes_string(x = "smoking_betsy_extra", y = pwy, color = "smoking_exposure_ga"))+
    geom_boxplot()+
    geom_point(alpha = 0.5, position = position_jitter())+
    labs(x = NULL, y = "Center-log Ratio", color = "Smoking status")+
    theme(axis.text.x = element_text(angle = 60, hjust = 1))+
    scale_color_manual(breaks = rev(levels(pathways_all_phyloseq_otuMeta_rel$smoking_exposure_ga)), values = ggsci::pal_jco()(4)[c(4,2,1)]),
  USE.NAMES = T,
  simplify = FALSE)

boxplots_clr_ga <- sapply(pathway_names_map$fixed_names, function(pwy) 
  ggplot(pathways_all_phyloseq_otuMeta_clr %>% 
           mutate(smoking_exposure_ga = factor(smoking_exposure_ga, levels = c("Current", "Former", "Never"))), aes_string(x = "smoking_exposure_ga", y = pwy, color = "smoking_exposure_ga"))+
    geom_boxplot()+
    #geom_point(alpha = 0.5, position = position_jitter())+
    labs(x = NULL, y = NULL, color = "Smoking status")+
    theme(axis.text.x = element_text(angle = 60, hjust = 1),
          legend.position = "none")+
    #EnvStats::stat_n_text(angle = 90, hjust = 1, y.pos = -0.01)+
    #ylim(-0.15, 1)+
    scale_color_manual(values = ggsci::pal_jco()(4)[c(4,2,1)]),
  USE.NAMES = T,
  simplify = FALSE)


mean_values_clr <- pathways_all_phyloseq_otuMeta_clr %>% 
  group_by(smoking_betsy_extra) %>% 
  summarise_at(all_of(pathway_names_map$fixed_names), .funs = mean)

boxplots_clr_detailed <- lapply(1:length(boxplots_clr_detailed), function(i) boxplots_clr_detailed[[i]] + 
                            geom_line(data = mean_values_clr, mapping = aes_string(x = "smoking_betsy_extra", y = colnames(mean_values_clr)[i+1], group = 1), color = "black")+
                            geom_point(data = mean_values_clr, mapping = aes_string(x = "smoking_betsy_extra", y = colnames(mean_values_clr)[i+1]), color = "black")
                          )

```

But the problem here is the approximation with the generic smoking variable, which has only 3 groups.. to better visualize this we should do more of either a boxplot or scatterplot with error bars plotting each pathway against that smoking variable.

### Combine plots

```{r}

panels_boxplots <- suppressWarnings(lapply(1:length(boxplots_relAb_detailed), function(i) 
  ggarrange(
  boxplots_relAb_detailed[[i]] + theme(axis.text.x = element_blank()),
  boxplots_relAb_ga[[i]]+ theme(axis.text.x = element_blank()),
  boxplots_clr_detailed[[i]],
  boxplots_clr_ga[[i]],
  common.legend = TRUE, legend = "right", heights = c(0.8,1), widths = c(1, 0.7)
  ) %>% annotate_figure(top = text_grob(label = pathway_names_map %>% filter(fixed_names == pathway_names_map$fixed_names[i]) %>% .$original_names, face = "bold", color = "darkred", size = 12))))


ggexport(plotlist = panels_boxplots, 
         filename = "../results/panels_boxplots_signif_pathways_20+teeth.pdf",
         height = 7, 
         widht = 9)
```


## Only 20+ teeth and age < 60

**NB**: 
If I pick only significant pathways, I am leaving out the nitrate assimilatory pathway, which had an interesting trend. 

### relative abundance pathways

```{r}
pathways_all_phyloseq_otuMeta_rel <- pathways_all_phyloseq %>% 
  phy_transform("compositional") %>% 
  filter_sample_data(how_many_teeth == "20+" & between(age, 18,60)) %>% 
  phy_OtuMetaTable() %>% 
  mutate(smoking_betsy_extra = add_N_to_catVar(smoking_betsy_extra))

boxplots_relAb_detailed <- sapply(pathway_names_map$fixed_names, function(pwy) ggplot(pathways_all_phyloseq_otuMeta_rel, aes_string(x = "smoking_betsy_extra", y = pwy, color = "smoking_exposure_ga"))+
    geom_boxplot()+
    geom_point(alpha = 0.5, position = position_jitter())+
    labs(x = NULL, y = "Rel. Abund.", color = "Smoking status")+
    theme(axis.text.x = element_text(angle = 60, hjust = 1))+
    scale_color_manual(breaks = rev(levels(pathways_all_phyloseq_otuMeta_rel$smoking_exposure_ga)), values = ggsci::pal_jco()(4)[c(4,2,1)]),
  USE.NAMES = T,
  simplify = FALSE)

boxplots_relAb_ga <- sapply(pathway_names_map$fixed_names, function(pwy) 
  ggplot(pathways_all_phyloseq_otuMeta_rel %>% 
           mutate(smoking_exposure_ga = factor(smoking_exposure_ga, levels = c("Current", "Former", "Never"))), aes_string(x = "smoking_exposure_ga", y = pwy, color = "smoking_exposure_ga"))+
    geom_boxplot()+
    #geom_point(alpha = 0.5, position = position_jitter())+
    labs(x = NULL, y = NULL, color = "Smoking status")+
    theme(axis.text.x = element_text(angle = 60, hjust = 1),
          legend.position = "none")+
    #EnvStats::stat_n_text(angle = 90, hjust = 1, y.pos = -0.01)+
    #ylim(-0.15, 1)+
    scale_color_manual(values = ggsci::pal_jco()(4)[c(4,2,1)]),
  USE.NAMES = T,
  simplify = FALSE)


mean_values_relAb <- pathways_all_phyloseq_otuMeta_rel %>% 
  group_by(smoking_betsy_extra) %>% 
  summarise_at(all_of(pathway_names_map$fixed_names), .funs = mean)

boxplots_relAb_detailed <- lapply(1:length(boxplots_relAb_detailed), function(i) boxplots_relAb_detailed[[i]] + 
                            geom_line(data = mean_values_relAb, mapping = aes_string(x = "smoking_betsy_extra", y = colnames(mean_values_relAb)[i+1], group = 1), color = "black")+
                            geom_point(data = mean_values_relAb, mapping = aes_string(x = "smoking_betsy_extra", y = colnames(mean_values_relAb)[i+1]), color = "black")
                          )

```

### clr

```{r}
pathways_all_phyloseq_otuMeta_clr <- pathways_all_phyloseq %>% 
  phy_transform("clr") %>% 
  filter_sample_data(how_many_teeth == "20+" & between(age, 18,60)) %>% 
  phy_OtuMetaTable() %>% 
  mutate(smoking_betsy_extra = add_N_to_catVar(smoking_betsy_extra))

boxplots_clr_detailed <- sapply(pathway_names_map$fixed_names, function(pwy) ggplot(pathways_all_phyloseq_otuMeta_clr, aes_string(x = "smoking_betsy_extra", y = pwy, color = "smoking_exposure_ga"))+
    geom_boxplot()+
    geom_point(alpha = 0.5, position = position_jitter())+
    labs(x = NULL, y = "Center-log Ratio", color = "Smoking status")+
    theme(axis.text.x = element_text(angle = 60, hjust = 1))+
    scale_color_manual(breaks = rev(levels(pathways_all_phyloseq_otuMeta_rel$smoking_exposure_ga)), values = ggsci::pal_jco()(4)[c(4,2,1)]),
  USE.NAMES = T,
  simplify = FALSE)

boxplots_clr_ga <- sapply(pathway_names_map$fixed_names, function(pwy) 
  ggplot(pathways_all_phyloseq_otuMeta_clr %>% 
           mutate(smoking_exposure_ga = factor(smoking_exposure_ga, levels = c("Current", "Former", "Never"))), aes_string(x = "smoking_exposure_ga", y = pwy, color = "smoking_exposure_ga"))+
    geom_boxplot()+
    #geom_point(alpha = 0.5, position = position_jitter())+
    labs(x = NULL, y = NULL, color = "Smoking status")+
    theme(axis.text.x = element_text(angle = 60, hjust = 1),
          legend.position = "none")+
    #EnvStats::stat_n_text(angle = 90, hjust = 1, y.pos = -0.01)+
    #ylim(-0.15, 1)+
    scale_color_manual(values = ggsci::pal_jco()(4)[c(4,2,1)]),
  USE.NAMES = T,
  simplify = FALSE)


mean_values_clr <- pathways_all_phyloseq_otuMeta_clr %>% 
  group_by(smoking_betsy_extra) %>% 
  summarise_at(all_of(pathway_names_map$fixed_names), .funs = mean)

boxplots_clr_detailed <- lapply(1:length(boxplots_clr_detailed), function(i) boxplots_clr_detailed[[i]] + 
                            geom_line(data = mean_values_clr, mapping = aes_string(x = "smoking_betsy_extra", y = colnames(mean_values_clr)[i+1], group = 1), color = "black")+
                            geom_point(data = mean_values_clr, mapping = aes_string(x = "smoking_betsy_extra", y = colnames(mean_values_clr)[i+1]), color = "black")
                          )

```

But the problem here is the approximation with the generic smoking variable, which has only 3 groups.. to better visualize this we should do more of either a boxplot or scatterplot with error bars plotting each pathway against that smoking variable.

### Combine plots

```{r}

panels_boxplots <- suppressWarnings(lapply(1:length(boxplots_relAb_detailed), function(i) 
  ggarrange(
  boxplots_relAb_detailed[[i]] + theme(axis.text.x = element_blank()),
  boxplots_relAb_ga[[i]]+ theme(axis.text.x = element_blank()),
  boxplots_clr_detailed[[i]],
  boxplots_clr_ga[[i]],
  common.legend = TRUE, legend = "right", heights = c(0.8,1), widths = c(1, 0.7)
  ) %>% annotate_figure(top = text_grob(label = pathway_names_map %>% filter(fixed_names == pathway_names_map$fixed_names[i]) %>% .$original_names, face = "bold", color = "darkred", size = 12))))


ggexport(plotlist = panels_boxplots, 
         filename = "../results/panels_boxplots_signif_pathways_20+teeth,youngerThan60.pdf",
         height = 7, 
         widht = 9)
```


# Heatmaps signif pathways ("Smoking Detailed")

```{r}

library(pheatmap)

pathways_all_phyloseq <- phyloseq(sample_data(phy_Q1_meta), otu_table(picrust_pathways_matrix_Q1, taxa_are_rows = T)) %>% 
  mutate_sample_data(smoking_betsy_extra = ifelse(smoking_exposure_ga == "Never", "ever", str_extract(smoking_detailed, pattern = "\\ .*")),
                     smoking_betsy_extra = paste0(substr(smoking_exposure_ga, 1,1), smoking_betsy_extra)
                     ) %>% 
  filter_sample_data(!(smoking_betsy_extra %in% c("C (30,60] g", "F NA y")))

pathways_all_phyloseq@sam_data$smoking_betsy_extra %<>%
  factor(levels = sort(unique(pathways_all_phyloseq@sam_data$smoking_betsy_extra))[c(6,5,3,2,7,4,1,8,9,10,12,13,14,11,15)])

signif_pathways_names <- readRDS("../results/DiffAbund_multimethod/significant_PWYs_majorityCases.RDS")

# remove ubiquinol pathways that correlate
signif_pathways_names <-  c(signif_pathways_names[!grepl("ubiquinol",signif_pathways_names)],      signif_pathways_names[grepl("ubiquinol-10",signif_pathways_names)]
)

pathway_names_map <- data.frame(
  original_names = signif_pathways_names,
  fixed_names = make.names(signif_pathways_names)
  )
```

## compositional & median per group

```{r, fig.height=7, fig.width=10}

tmp <- phy_transform(pathways_all_phyloseq, "compositional") %>% 
  mutate_sample_data(smoking_betsy_extra = add_N_to_catVar(smoking_betsy_extra)) %>% 
  psmelt() %>% 
  filter(OTU %in% pathway_names_map$original_names) %>% 
  group_by(OTU, smoking_betsy_extra) %>% 
  summarise(pathway_mean = median(Abundance)) %>% 
  reshape2::acast(value.var = "pathway_mean", formula = smoking_betsy_extra ~ OTU) %>% 
  t()

pheatmap(tmp, scale = "none", cluster_cols = FALSE)
```

## compositional & mean per group

```{r, fig.height=7, fig.width=10}

tmp <- phy_transform(pathways_all_phyloseq, "compositional") %>% 
  mutate_sample_data(smoking_betsy_extra = add_N_to_catVar(smoking_betsy_extra)) %>%
  psmelt() %>% 
  filter(OTU %in% pathway_names_map$original_names) %>% 
  group_by(OTU, smoking_betsy_extra) %>% 
  summarise(pathway_mean = mean(Abundance)) %>% 
  reshape2::acast(value.var = "pathway_mean", formula = smoking_betsy_extra ~ OTU) %>% 
  t()


pheatmap(tmp, scale = "none", cluster_cols = FALSE)
```

## CLR & median

```{r}

tmp <- phy_transform(pathways_all_phyloseq, "clr") %>% 
  mutate_sample_data(smoking_betsy_extra = add_N_to_catVar(smoking_betsy_extra)) %>%
  psmelt() %>% 
  filter(OTU %in% pathway_names_map$original_names) %>% 
  group_by(OTU, smoking_betsy_extra) %>% 
  summarise(pathway_mean = median(Abundance)) %>% 
  reshape2::acast(value.var = "pathway_mean", formula = smoking_betsy_extra ~ OTU) %>% 
  t()

pheatmap::pheatmap(tmp, scale = "none", main = "Unscaled Rows", cluster_cols = FALSE)
pheatmap::pheatmap(tmp, scale = "row", main = "Scaled Rows", cluster_cols = FALSE)
```

## CLR & mean

```{r, fig.height=7, fig.width=9}

tmp <- phy_transform(pathways_all_phyloseq, "clr") %>% 
  mutate_sample_data(smoking_betsy_extra = add_N_to_catVar(smoking_betsy_extra)) %>%
  psmelt() %>% 
  filter(OTU %in% pathway_names_map$original_names) %>% 
  group_by(OTU, smoking_betsy_extra) %>% 
  summarise(pathway_mean = mean(Abundance)) %>% 
  reshape2::acast(value.var = "pathway_mean", formula = smoking_betsy_extra ~ OTU) %>% 
  t()

pheatmap::pheatmap(tmp, scale = "none", main = "Unscaled Rows", cluster_cols = FALSE)
pheatmap::pheatmap(tmp, scale = "row", main = "Scaled Rows", cluster_cols = FALSE)

```

## CLR per Sample

```{r, include=FALSE}

tmp.otu <- phy_transform(pathways_all_phyloseq, "clr") %>% 
  #mutate_sample_data(smoking_betsy_extra = add_N_to_catVar(smoking_betsy_extra)) %>%
  abundances()
tmp.otu <- tmp.otu[pathway_names_map$original_names,]

annotation_col <- select(meta(pathways_all_phyloseq), smoking_betsy_extra) %>% 
    mutate(smoking_betsy_extra = as.integer(smoking_betsy_extra)) %>% 
    dplyr::rename(`Smoking Habit` = smoking_betsy_extra)


heatmap_1 <- pheatmap::pheatmap(tmp.otu, scale = "none", annotation_col = annotation_col, main = "Unscaled Rows",annotation_names_col = FALSE)
heatmap_2 <- pheatmap::pheatmap(tmp.otu, scale = "row", annotation_col = annotation_col, main = "Scaled Rows",annotation_names_col = FALSE)

```

```{r, fig.height=8, fig.width=12}
ggsave(plot = ggplotify::as.ggplot(heatmap_1),
       filename = "C:/Users/gantonello/OneDrive - Scientific Network South Tyrol/Desktop/tmp/heatmap_smoking_betsy.png", height = 8, width = 11, dpi = 300, bg = "white")

ggplotify::as.ggplot(heatmap_1)

ggplotify::as.ggplot(heatmap_2)
```



# Heatmaps signif pathways ("smoking GA")

## compositional & median per group

```{r, fig.height=7, fig.width=10}

tmp <- phy_transform(pathways_all_phyloseq, "compositional") %>% 
  mutate_sample_data(smoking_betsy_extra = add_N_to_catVar(smoking_betsy_extra)) %>%
  psmelt() %>% 
  filter(OTU %in% pathway_names_map$original_names) %>% 
  group_by(OTU, smoking_exposure_ga) %>% 
  summarise(pathway_mean = median(Abundance)) %>% 
  reshape2::acast(value.var = "pathway_mean", formula = smoking_exposure_ga ~ OTU) %>% 
  t()

pheatmap(tmp, scale = "none", cluster_cols = FALSE)
```

## compositional & mean per group

```{r, fig.height=7, fig.width=10}

tmp <- phy_transform(pathways_all_phyloseq, "compositional") %>% 
  mutate_sample_data(smoking_betsy_extra = add_N_to_catVar(smoking_betsy_extra)) %>%
  psmelt() %>% 
  filter(OTU %in% pathway_names_map$original_names) %>% 
  group_by(OTU, smoking_exposure_ga) %>% 
  summarise(pathway_mean = mean(Abundance)) %>% 
  reshape2::acast(value.var = "pathway_mean", formula = smoking_exposure_ga ~ OTU) %>% 
  t()


pheatmap(tmp, scale = "none", cluster_cols = FALSE)
```

## CLR & median

```{r, fig.height=7, fig.width=10}

tmp <- phy_transform(pathways_all_phyloseq, "clr") %>% 
  mutate_sample_data(smoking_betsy_extra = add_N_to_catVar(smoking_betsy_extra)) %>%
  psmelt() %>% 
  filter(OTU %in% pathway_names_map$original_names) %>% 
  group_by(OTU, smoking_exposure_ga) %>% 
  summarise(pathway_mean = median(Abundance)) %>% 
  reshape2::acast(value.var = "pathway_mean", formula = smoking_exposure_ga ~ OTU) %>% 
  t()


pheatmap(tmp, scale = "none", cluster_cols = FALSE)
```

## CLR & mean

```{r, fig.height=7, fig.width=10}

tmp <- phy_transform(pathways_all_phyloseq, "clr") %>% 
  mutate_sample_data(smoking_betsy_extra = add_N_to_catVar(smoking_betsy_extra)) %>%
  psmelt() %>% 
  filter(OTU %in% pathway_names_map$original_names) %>% 
  group_by(OTU, smoking_exposure_ga) %>% 
  summarise(pathway_mean = mean(Abundance)) %>% 
  reshape2::acast(value.var = "pathway_mean", formula = smoking_exposure_ga ~ OTU) %>% 
  t()


pheatmap(tmp, scale = "none", cluster_cols = FALSE)
```

# Discussion and further insights

The visual artifact was caused by two things: 
    
    1. Scaling by row
    2. Mean instead of median abundance for each category 

## Most decreased pathways don't depend on read depth but may depend on alpha diversity?

Most pathways are decreased, it doesn't seem logical, since if a pathway decrases, we should se an increase of another, in a compositional setting. This made me wonder if something about read depth or alpha diversity is fucked up... Read depth does not seem to be impacted, but apparently alpha diversity is slightily lower in smokers. Alpha diversity is much more affected by the number of teeth, though!

```{r}

phy_Q1 <- phy_Q1 %>% phy_alpha_div_into_phy_metadata(raref_depth = 5000,measures = c("Observed", "Shannon")) %>% 
  phy_add_metadata_variables(as.data.frame(sample_sums(phy_Q1)) %>% rownames_to_column("aid_michigan") %>% set_names(c("aid_michigan", "read_depth")), 
                             by = "aid_michigan")


plots_alpha <- lapply(c("alpha_Observed", "alpha_Shannon"), 
                      function(div) ggplot(meta(phy_Q1), aes_string( x = "how_many_teeth", y = div, color = "smoking_exposure_ga"))+ 
                        #geom_violin()+ 
                        geom_boxplot(show.legend = FALSE)+
                        scale_color_manual(values = ggsci::pal_jco()(4)[c(1,2,4)])+
                        labs(
                          x = "Number of Teeth",
                          y = gsub("alpha_", "", div)
                        ))

plot_readDepth <- ggplot(meta(phy_Q1), aes(x = how_many_teeth, y = read_depth, color = smoking_exposure_ga))+ 
                        #geom_violin()+ 
                        geom_boxplot( show.legend = FALSE)+
                        scale_color_manual(values = ggsci::pal_jco()(4)[c(1,2,4)])+
                        labs(
                          x = "Number of Teeth",
                          y = "Read Depth", 
                          color = "Smoking Habit"
                        )


ggarrange(ggarrange(plotlist = plots_alpha, nrow = 2, ncol = 1, legend = "none"), plot_readDepth, nrow = 1, ncol = 2, common.legend = T)
```

Read depth seems to be affected mostly by the humber of teeth in interaction with smoking, only in the case with **0 teeth**.

# Other not yet answered smoking questions


```{r}
smoking_variables <- readxl::read_xlsx("C:/Users/gantonello/sensitive_data/CHRISMB/Microbiome_data/mapping file generation/CHRIS13K_smoking/traits.xlsx", sheet = "Traits") %>% 
  dplyr::rename(aid_chris = AID) %>% 
  filter(aid_chris %in% phy_Q1_meta$aid_chris) %>% 
  mutate(x0sm51 = factor(x0sm51, labels = c("Never", "Former", "Current (R)", "Current (NR)")))

```

## Are 2nd-hand smokers more similar to smokers or to never smokers?

To disentangle this we need to split people based on whether they are exposed to smoking or not. There is an item in the questionnaire that asks about passive smoke at all in their everyday life. The source of smoking asked would be either at home, or at work.

```{r}

kableExtra::kbl(table(smoking_variables$x0sm46 %>% factor(labels = c("Yes", "No")),smoking_variables$x0sm51, useNA ="ifany"), caption = "People exposed to second-hand smoking in the last 12 months. individuals were split by smoking habit")

```

There are 49 never and former smokers who are exposed to smoking, and some cases of former and current smokers. Do these guys show microbiota profiles closer to smoking types? This would push the idea that the effect of smoking on the depletion of aerobes does not depend on the depletion of oxygen, since second hand smoking is most probably not depleted in oxygen.

```{r}

phy_Q1_smoking_enriched <- phy_Q1 %>% 
  select_sample_data(!contains("x0sm")) %>% 
  phy_add_metadata_variables(df = smoking_variables, by = "aid_chris") %>% 
  mutate_sample_data(x0sm46 = factor(case_when(x0sm46 == "2" ~ "no",
                                        x0sm46 == "1" ~ "yes", 
                                        TRUE ~ "other")),
                     x0sm45 = factor(case_when(x0sm45 == "2" ~ "no",
                                        x0sm45 == "1" ~ "yes", 
                                        TRUE ~ "non-smoker"))
                     )


beta_plot0 <- lapply(levels(phy_Q1_smoking_enriched@sam_data$x0sm51), function(sm) 
  phy_betaPlot(physeq = phy_Q1_smoking_enriched %>% 
                 filter_sample_data(x0sm51 == sm),
               dist = "bray",color = "x0sm46",visual_grouping = "ellipses") + 
    labs(color = "Passive Smoking", 
         title = sm))

ggarrange(plotlist = beta_plot0, common.legend = TRUE)

```

There doesn't seem to be an effect of passive smoking on the overall composition of the salivary microbiota of CHRIS.  

```{r}
library(LinDA)

phyloseqs_ready_tmp <- sapply(levels(phy_Q1_smoking_enriched@sam_data$smoking_exposure_ga), function(sm) 
  phy_Q1_smoking_enriched %>% filter_sample_data(smoking_exposure_ga == sm), USE.NAMES = T, simplify = FALSE)

linda_models_for_each_smoking_class <- lapply(phyloseqs_ready_tmp, function(x) 
  linda(otu.tab = abundances(x), 
        meta = meta(x), 
        formula = "~ x0sm46 + age_cat + sex + how_many_teeth", imputation = FALSE, winsor.quan = 0.97, alpha = 0.1, adaptive = FALSE))
# i put extra parameters, adaptive and imputation false, because otherwise for never smokers it would use imputation, and for other smoking classes another manipulation method, so I preferred to get them out easy

results_raw <- lapply(linda_models_for_each_smoking_class, function(x) x$output$x0sm46yes)


tmp <- results_raw %>% 
  lapply(filter, reject) %>% bind_rows(.id = "smoking habit") %>% 
  rownames_to_column("ASV") %>% 
  left_join(as.data.frame(tax_table(phy_Q1)), by = "ASV") %>% 
  dplyr::select(`smoking habit`, log2FoldChange, padj, df, Phylum, ID, ASV) %>% 
  left_join(phy_BasicStats(phy_Q1, transform = "compositional") %>% dplyr::rename(ASV = taxon), by = "ASV")

DT::datatable(tmp)

```

The only associations found with the **LinDA** algorithm are `r paste(tmp$ID, collapse = ", ")`, found in current smokers. This points to a potential artifact, since passive smoking among smokers should not be impactful, compared to active smoking.

Another thing that could influence is the amount of people around you that smoke, and the proximity, for this we have a variable specifying how many people smoke around these individuals. we could refine the analysis based on this, and make a semi-quantitative categorical variable and test diff. abound among extreme cases

```{r}

kableExtra::kbl(table(smoking_variables$x0sm47, smoking_variables$x0sm51), caption = "Number of people smoking in households of the participants. Value '-99' stands for 'not applicable', because they declared not being regularly exposed to second-hand smoking. People were split by smoking habit") %>% 
  kableExtra::kable_styling()

```

The sample size is not sufficient to draw any statistical conclusion, but the hypothesis is worth investigating in the future with larger datasets, because it could have an impact, especially in within-household exposure. Even more Provided that they smoke indoors.

## Does inhaling or not change microbiota profiles of smokers?

```{r}

kableExtra::kbl(table(smoking_variables$x0sm45 %>% factor(labels = c("Not applicable", "Yes","No")), smoking_variables$x0sm51), caption = "Number of people inhaling. Value '-99' stands for 'not applicable', because they never smoked in their life. People were split by smoking habit") %>% 
  kableExtra::kable_styling()

```

The hypothesis is that keeping smoke in the mouth should have more adverse effects locally than inhaling

```{r}

beta_plot1 <- lapply(levels(phy_Q1_smoking_enriched@sam_data$smoking_exposure_ga), function(sm) 
  phy_betaPlot(physeq = phy_Q1_smoking_enriched %>% filter_sample_data(smoking_exposure_ga == sm),
               dist = "bray",color = "x0sm45",visual_grouping = "ellipses")+
    labs(color = "Smoke inhaled?",
         title = sm)
)


ggarrange(plotlist = beta_plot1, common.legend = TRUE)
```

```{r}
library(LinDA)

phyloseqs_ready_tmp <- sapply(levels(phy_Q1_smoking_enriched@sam_data$smoking_exposure_ga)[2:3], 
                              function(sm) 
                                phy_Q1_smoking_enriched %>% 
                                filter_sample_data(smoking_exposure_ga == sm), 
                              USE.NAMES = TRUE, simplify = F)

linda_models_for_each_smoking_class <- lapply(phyloseqs_ready_tmp, function(x) 
  linda(otu.tab = abundances(x), 
        meta = meta(x), 
        formula = "~ x0sm45 + age_cat + sex + how_many_teeth",
        imputation = FALSE, 
        adaptive = FALSE, 
        winsor.quan = 0.97, 
        alpha = 0.1))
# i put extra parameters, adaptive and imputation false, because otherwise for never smokers it would use imputation, and for other smoking classes another manipulation method, so I preferred to get them out easy

results_raw %>% 
  lapply(filter, reject) %>% bind_rows(.id = "smoking habit") %>% 
  rownames_to_column("ASV") %>% 
  left_join(as.data.frame(tax_table(phy_Q1)), by = "ASV") %>% 
  dplyr::select(`smoking habit`, log2FoldChange, padj, df, Phylum, ID, ASV) %>% 
  left_join(phy_BasicStats(phy_Q1, transform = "compositional") %>% dplyr::rename(ASV = taxon), by = "ASV") %>% 
  DT::datatable()

```

The effect of inhaling and not inhaling is close to none, with only one taxon, porphyromonas ASV227 differentially abudant. maybe in a case-control study it would more visible

# Biggest players in Denitrification Pathway

to find this, i had to go back to the unstratified PICRUSt2 results, and run the following script on our EURAC server end

```{r, eval=FALSE}

full_stratified_picrust <- data.table::fread("~/CHRISMB/PICRUSt2_prediction_v2.5/stratified/picrust2_output/pathways_out/path_abun_contrib.tsv.gz") %>% 
  dplyr::rename("pathway" = "function")

nitrate_reduction_only <- filter(full_stratified_picrust, pathway == "DENITRIFICATION-PWY")

# from this summary there are several taxa contributing to the denitrification
ASVs_contributing_to_nitrateRed_perSample <- group_by(nitrate_reduction_only, sample) %>% 
  tally(name = "Number of contributing ASVs") %>% 
  arrange(desc(`Number of contributing ASVs`))


ASVs_No3_reducing_perSample_histogram <- ggplot(ASVs_contributing_to_nitrateRed_perSample, aes(x = `Number of contributing ASVs`))+ 
  geom_histogram()

stackplot_strongest_taxa <- nitrate_reduction_only %>% 
  filter(taxon_rel_abun > 1) %>% 
  ggplot(aes(x = sample, y = taxon_rel_function_abun, fill = taxon))+
  geom_bar(stat = "identity")+ 
  theme(axis.text.x = element_blank())+
  scale_fill_viridis_d()

table2_topContributing_ASVs <- group_split(nitrate_reduction_only, sample) %>% 
  lapply(function(x) arrange(x, desc(taxon_rel_function_abun)) %>% 
  head(10)) %>% 
  bind_rows() %>% 
  group_by(taxon) %>% 
  tally() %>% 
  arrange(desc(n))

saveRDS(table2_topContributing_ASVs, "~/tmp_data_to_share/NO3_reduction_biggest_players.RDS")

```

Then I copied it, to have it locally, ready to be loaded

```{r}
NO3_red_top_contrib_ASVs <- readRDS("../picrust2_results_data/annotation/NO3_reduction_biggest_players.RDS")

NO3_red_top_contrib_ASVs %>% 
  dplyr::rename(Number_occurrences = n) %>% 
  left_join(as.data.frame(tax_table(phy_Q1)) %>% 
              dplyr::select(ASV, ID, Phylum) %>% 
              dplyr::rename(taxon = ASV), by = "taxon") %>%
  left_join(phy_BasicStats(phy_Q1, transform = "compositional")) %>% 
  mutate(Prevalence = round(prevalence_compositional, 3),
         MeanAbundance = paste(round(meanAbund_compositional*100, 2)," %")) %>% 
  dplyr::select(Phylum, taxon, ID, Prevalence, MeanAbundance, Number_occurrences) %>% 
  DT::datatable(caption = "ASVs contributing the most to the nitrate reduction pathway. They have been identified as those that contributed the most in each sample. then a top 10 of the biggest contributors was extracted for each sample and the number of occurrences was calculated. this number is generally proportional to the mean abundance and prevalence, but it is more comprehensive of the role each ASV has in each sample.")
```

Denitrification enyme profiles, my idea started reading the [nitrate study](https://pubmed.ncbi.nlm.nih.gov/13143716/), referenced by [Zhang & Wong, 2009](https://link.springer.com/article/10.1007/BF03256330). They say that nitrate reduction is actually bad for the nitrosamines, but NO is good for health. do we have evidence of where the nitrate reduction stops?

See the pathway in [MetaCyc](https://metacyc.org/META/new-image?type=PATHWAY&object=DENITRIFICATION-PWY)

```{r}

EC_per_sample <- data.table::fread("../picrust2_results_data/pred_metagenome_unstrat_descrip.tsv.gz") %>% 
  dplyr::rename(enzyme = `function`)

enzymes_in_NOred <- c("EC:1.7.5.1", "EC:1.7.2.1", "EC:1.7.2.5", "EC:1.7.2.4")

EC_per_sample_NO3red <- filter(EC_per_sample, enzyme %in% enzymes_in_NOred)

EC_per_sample_NO3red <- EC_per_sample_NO3red %>%
  dplyr::select(-description) %>% 
  column_to_rownames("enzyme") %>%
  t()

min_nonzero <- sort(EC_per_sample_NO3red)[2]/2

EC_per_sample_NO3red_clr <- (EC_per_sample_NO3red + min_nonzero) %>% 
  apply(2, function(x) log(x)-mean(log(x))) %>% 
  as.data.frame() %>% 
  rownames_to_column("aid_michigan") %>% 
  right_join(phy_Q1_meta, by = "aid_michigan") %>% 
  pivot_longer(cols = starts_with("EC:"), names_to = "enzymes", values_to = "abund_enzyme") %>% 
  mutate(enzymes = factor(enzymes, levels =  c("EC:1.7.2.1", "EC:1.7.2.5", "EC:1.7.2.4")))

ggplot(EC_per_sample_NO3red_clr, aes(x = enzymes, y = abund_enzyme, color = smoking_betsy_extra))+ 
  geom_boxplot()+
  scale_color_viridis_d(direction = -1)+
  labs(x = "Denitrification Enzymes",
       y = "CLR(abundance)", 
       color = "Smoking gradient")
  

pairs(EC_per_sample_NO3red)
```

```{r, echo=F, out.width="50%"}
knitr::include_graphics("../picrust2_results_data/annotation/available_nitrate enzymes.PNG")
```



