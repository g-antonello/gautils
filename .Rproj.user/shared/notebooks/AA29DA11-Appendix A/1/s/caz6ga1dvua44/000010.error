{"frames":[{"func":"left_join(taxtab, gram, by = \"Phylum\", sort = FALSE, all.x = TRUE) %>% \n    left_join(otu_tab, by = \"ASV\") %>% select(-ASV, -Phylum) %>% \n    group_split(Gram) %>% set_names(c(\"Gram_neg\", \"Gram_pos\")) %>% \n    lapply(function(df) select(df, -Gram)) %>% sapply(colSums) %>%  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rownames_to_column(., \"aid_michigan\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"as.data.frame(.)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"sapply(., colSums)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lapply(., function(df) select(df, -Gram))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"group_split(., Gram)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"select(., -ASV, -Phylum)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"left_join(., otu_tab, by = \"ASV\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"left_join(taxtab, gram, by = \"Phylum\", sort = FALSE, all.x = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"left_join.data.frame(taxtab, gram, by = \"Phylum\", sort = FALSE, \n    all.x = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"check_dots_empty0(...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"check_dots_empty(call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"action_dots(error = error, action = action, message = \"`...` must be empty.\", \n    note = note, dots_i = TRUE, class = \"rlib_error_dots_nonempty\", \n    call = call, env = env)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"try_dots(action(c(message, x = bullet_header, set_names(bullets, \n    \"*\"), note), class = c(class, \"rlib_error_dots\"), ...))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"action(c(message, x = bullet_header, set_names(bullets, \"*\"), \n    note), class = c(class, \"rlib_error_dots\"), ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signalCondition(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (cond) \n.Internal(C_tryCatchHelper(addr, 1L, cond)))(structure(list(message = structure(\"`...` must be empty.\", names = \"\"), \n    trace = structure(list(call = list(left_join(taxtab, gram, \n        by = \"Phylum\", sort = FALSE, all.x = TRUE) %>% left_join(otu_tab,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".handleSimpleError(function (cond) \n.Internal(C_tryCatchHelper(addr, 1L, cond)), \"error in evaluating the argument 'X' in selecting a method for function 'lapply': \\033[38;5;232m`...` must be empty.\\n\\033[31m✖\\033[38;5;232m Problematic arguments:\\n\\033[36m•\\033[38;5;232m sort = FALSE\\n\\033[36m•\\033[38;5;232m all.x = TRUE\\033[39m\", \n    base::quote((function (cond) \n    .Internal(C_tryCatchHelper(addr, 1L, cond)))(structure(list( ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"h(simpleError(msg, call))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".handleSimpleError(function (cond) \n.Internal(C_tryCatchHelper(addr, 1L, cond)), \"error in evaluating the argument 'X' in selecting a method for function 'sapply': error in evaluating the argument 'X' in selecting a method for function 'lapply': \\033[38;5;232m`...` must be empty.\\n\\033[31m✖\\033[38;5;232m Problematic arguments:\\n\\033[36m•\\033[38;5;232m sort = FALSE\\n\\033[36m•\\033[38;5;232m all.x = TRUE\\033[39m\", \n    base::quote(h(simpleError(msg, call))))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"h(simpleError(msg, call))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in h(simpleError(msg, call)) : \n  error in evaluating the argument 'x' in selecting a method for function 'as.data.frame': error in evaluating the argument 'X' in selecting a method for function 'sapply': error in evaluating the argument 'X' in selecting a method for function 'lapply': \u001B[38;5;232m`...` must be empty.\n\u001B[31m✖\u001B[38;5;232m Problematic arguments:\n\u001B[36m•\u001B[38;5;232m sort = FALSE\n\u001B[36m•\u001B[38;5;232m all.x = TRUE\u001B[39m\n"}