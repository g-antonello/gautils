"0",""
"0","if(!""phy_Q1_genus"" %in% ls()){"
"0","  phy_Q1_genus <- speedyseq::tax_glom(phy_Q1, taxrank = ""Genus"")"
"0","  phy_Q1_genus@tax_table@.Data %>% data.frame() %>% .$Genus -> taxa_names(phy_Q1_genus)"
"0","}"
"0","##############################"
"0",""
"0",""
"0","dir.create(""../results/Q1/1.3_differential abundance/genus/smoking_exposure_ga/"")"
"2","Warning: cannot create dir '..\results\Q1\1.3_differential abundance\genus\smoking_exposure_ga', reason 'No such file or directory'"
"0","library(DESeq2)"
"2","Loading required package: S4Vectors
"
"2","Loading required package: stats4
"
"2","Loading required package: BiocGenerics
"
"2","
Attaching package: ‘BiocGenerics’

"
"2","The following objects are masked from ‘package:dplyr’:

    combine, intersect, setdiff, union

"
"2","The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

"
"2","The following objects are masked from ‘package:base’:

    anyDuplicated, aperm, append, as.data.frame, basename, cbind, colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,
    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,
    Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, which.min

"
"2","
Attaching package: ‘S4Vectors’

"
"2","The following objects are masked from ‘package:dplyr’:

    first, rename

"
"2","The following object is masked from ‘package:tidyr’:

    expand

"
"2","The following objects are masked from ‘package:base’:

    expand.grid, I, unname

"
"2","Loading required package: IRanges
"
"2","
Attaching package: ‘IRanges’

"
"2","The following object is masked from ‘package:microbiome’:

    coverage

"
"2","The following object is masked from ‘package:phyloseq’:

    distance

"
"2","The following objects are masked from ‘package:dplyr’:

    collapse, desc, slice

"
"2","The following object is masked from ‘package:purrr’:

    reduce

"
"2","The following object is masked from ‘package:grDevices’:

    windows

"
"2","Loading required package: GenomicRanges
"
"2","Loading required package: GenomeInfoDb
"
"2","
Attaching package: ‘GenomicRanges’

"
"2","The following object is masked from ‘package:magrittr’:

    subtract

"
"2","Loading required package: SummarizedExperiment
"
"2","Loading required package: MatrixGenerics
"
"2","Loading required package: matrixStats
"
"2","
Attaching package: ‘matrixStats’

"
"2","The following object is masked from ‘package:dplyr’:

    count

"
"2","
Attaching package: ‘MatrixGenerics’

"
"2","The following objects are masked from ‘package:matrixStats’:

    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, colCounts, colCummaxs, colCummins, colCumprods, colCumsums, colDiffs,
    colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, colProds,
    colQuantiles, colRanges, colRanks, colSdDiffs, colSds, colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,
    colWeightedMeans, colWeightedMedians, colWeightedSds, colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, rowCollapse,
    rowCounts, rowCummaxs, rowCummins, rowCumprods, rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, rowMadDiffs, rowMads,
    rowMaxs, rowMeans2, rowMedians, rowMins, rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, rowSdDiffs, rowSds, rowSums2,
    rowTabulates, rowVarDiffs, rowVars, rowWeightedMads, rowWeightedMeans, rowWeightedMedians, rowWeightedSds, rowWeightedVars

"
"2","Loading required package: Biobase
"
"2","Welcome to Bioconductor

    Vignettes contain introductory material; view with 'browseVignettes()'. To cite Bioconductor, see 'citation(""Biobase"")', and for
    packages 'citation(""pkgname"")'.

"
"2","
Attaching package: ‘Biobase’

"
"2","The following object is masked from ‘package:MatrixGenerics’:

    rowMedians

"
"2","The following objects are masked from ‘package:matrixStats’:

    anyMissing, rowMedians

"
"2","The following object is masked from ‘package:phyloseq’:

    sampleNames

"
"0","# create deseq object"
"0","phy_Q1_genus_deseq_q1 <- phyloseq_to_deseq2(phy_Q1_genus, design = ~ age_cat + sex + how_many_teeth + smoking_exposure_ga)"
"2","converting counts to integer mode
"
"2","  Note: levels of factors in the design contain characters other than
  letters, numbers, '_' and '.'. It is recommended (but not required) to use
  only letters, numbers, and delimiters '_' or '.', as these are safe characters
  for column names in R. [This is a message, not a warning or an error]
"
"0","# calculate geometric means, important to center the counts"
"0","geom_means_q1 <- apply(counts(phy_Q1_genus_deseq_q1), 1, function(x)"
"0","      exp(mean(log(x[x > 0]))))"
"0",""
"0","# estimate size factors, important to account for library size variations"
"0","estim_size_q1 <- estimateSizeFactors(phy_Q1_genus_deseq_q1, geoMeans = geom_means_q1)"
"2","  Note: levels of factors in the design contain characters other than
  letters, numbers, '_' and '.'. It is recommended (but not required) to use
  only letters, numbers, and delimiters '_' or '.', as these are safe characters
  for column names in R. [This is a message, not a warning or an error]
"
"0","# compute the DESeq2 glm, accounting for the estimate size factor and geometric means"
"0",""
"0","deseq2_results_q1 <- DESeq(estim_size_q1, fitType=""local"")"
"2","using pre-existing size factors
"
"2","estimating dispersions
"
"2","gene-wise dispersion estimates
"
"2","mean-dispersion relationship
"
"2","  Note: levels of factors in the design contain characters other than
  letters, numbers, '_' and '.'. It is recommended (but not required) to use
  only letters, numbers, and delimiters '_' or '.', as these are safe characters
  for column names in R. [This is a message, not a warning or an error]
"
"2","final dispersion estimates
"
"2","  Note: levels of factors in the design contain characters other than
  letters, numbers, '_' and '.'. It is recommended (but not required) to use
  only letters, numbers, and delimiters '_' or '.', as these are safe characters
  for column names in R. [This is a message, not a warning or an error]
"
"2","fitting model and testing
"
"2","  Note: levels of factors in the design contain characters other than
  letters, numbers, '_' and '.'. It is recommended (but not required) to use
  only letters, numbers, and delimiters '_' or '.', as these are safe characters
  for column names in R. [This is a message, not a warning or an error]
"
"2","-- replacing outliers and refitting for 1 genes
-- DESeq argument 'minReplicatesForReplace' = 7 
-- original counts are preserved in counts(dds)
"
"2","estimating dispersions
"
"2","  Note: levels of factors in the design contain characters other than
  letters, numbers, '_' and '.'. It is recommended (but not required) to use
  only letters, numbers, and delimiters '_' or '.', as these are safe characters
  for column names in R. [This is a message, not a warning or an error]
"
"2","fitting model and testing
"
"2","  Note: levels of factors in the design contain characters other than
  letters, numbers, '_' and '.'. It is recommended (but not required) to use
  only letters, numbers, and delimiters '_' or '.', as these are safe characters
  for column names in R. [This is a message, not a warning or an error]
"
"0","####### here we write results #######"
"0","saveRDS(deseq2_results_q1, ""../results/Q1/1.3_differential abundance/Q1.3_Diff_Abund_smoking_results.rds"")"
"0",""
"0","deseq_genus_smoking_list_df <- list(""Current/Former"" = results(deseq2_results_q1, contrast = c(""smoking_exposure_ga"",""Current"", ""Former""), "
"0","                                                          pAdjustMethod = ""fdr""),"
"0","                               ""Current/Never"" = results(deseq2_results_q1, contrast = c(""smoking_exposure_ga"",""Current"", ""Never""), "
"0","                                                          pAdjustMethod = ""fdr""),"
"0","                               ""Former/Never"" = results(deseq2_results_q1, contrast = c(""smoking_exposure_ga"",""Former"", ""Never""), "
"0","                                                          pAdjustMethod = ""fdr"")"
"0","                               ) %>% "
"0","  lapply(as.data.frame) %>% "
"0","  lapply(rownames_to_column, ""Genus"")"
"0",""
"0","saveRDS(deseq_genus_smoking_list_df, ""../results/Q1/1.3_differential abundance/Q1.3_Diff_Abund_smoking_results_as.data.frames.rds"")"
"0",""
